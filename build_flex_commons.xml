<?xml version="1.0" encoding="UTF-8"?>
<project name="build-release" default="build-release">

	<!-- Load the properties file. -->
	<property environment="env"/>
	<property file="${env.GENTOOLS_HOME}/build.properties"/>
	
	<property name="FLEX_HOME" value="${flex.sdk.home}/${flex.sdk.version}"/>

	<taskdef  name="asdoc"
			  classname="flex.ant.AsDocTask" 
			  classpath="${FLEX_HOME}/ant/lib/flexTasks.jar"/>
	
	<taskdef name="html-wrapper"
			 classname="flex.ant.HtmlWrapperTask" 
			 classpath="${FLEX_HOME}/ant/lib/flexTasks.jar"/>
	
	<taskdef  name="mxmlc"
			  classname="flex.ant.MxmlcTask" 
			  classpath="${FLEX_HOME}/ant/lib/flexTasks.jar"/>
			  
     <taskdef name="compc"
			  classname="flex.ant.CompcTask" 
			  classpath="${FLEX_HOME}/ant/lib/flexTasks.jar"/>
			  
	<taskdef resource="flexUnitTasks.tasks" 
	         classpath="${FLEX_HOME}/ant/lib/flexUnitTasks-4.1.0-RC1.77.jar"/>

    <target name="build_web_project" depends="wrapper"/>
	
	<target name="build_flex_project_with_test" depends="init_flex,remove_flex_log,compile_flex_project,compileTestRunner,executeTestRunner,publish"/>
	
	<target name="build_flex_project" depends="init_flex,remove_flex_log,compile_flex_project,publish"/>
	
	<target name="build_flex_library" depends="init_flex,remove_flex_log,compile_flex_library,asdoc,package,publish"/>
	
	<!-- ================================= 
          target: init             
      ================================= -->
	<target name="init_flex" description="--> init">	
		<mkdir dir="${as.doc.dir}" />
		<mkdir dir="${flex.test.report.dir}"/>
		
		<copy todir="${flex.temp.dir}" >
		    <fileset dir="${src.main.flex.dir}"/>
		</copy> 	

		<copy todir="${flex.test.temp.dir}" >
		    <fileset dir="${src.test.flex.dir}"/>
		</copy> 		
	</target>
	
	<!-- ================================= 
          target: remove flex log 
          Delete all log.info into the code in order win a bit of memory space             
      ================================= -->
	 <target name="remove_flex_log">	 		
 		<echo>remove_flex_log</echo>
	
    	<replaceregexp match="LOG.info.*?\);" replace="" flags="gs">
    		<fileset dir="${flex.temp.dir}" includes="**/*.as" />
    		<fileset dir="${flex.temp.dir}" includes="**/*.mxml" />
    	</replaceregexp>
	 </target>
	
	
	<!-- ================================= 
	          target: compile_flex_project       
	 ================================= -->
	 <target name="compile_flex_project"  description="--> compile flex project">
	    <mxmlc file="${basedir}/${flex.temp.dir}/${root.package}/${ivy.module}.mxml"
			   output="${bin.release.dir}/${ivy.module}.swf"
			   debug="false" 
			   static-rsls="false"
			   actionscript-file-encoding="UTF-8"
			   incremental="true"	  
			   keep-generated-actionscript="false">
			   
			   <!--<theme dir="${FLEX_HOME}/frameworks/themes/Halo">
					<include name="halo.swc" />
			   </theme>-->
					
			   <load-config filename="${FLEX_HOME}/frameworks/flex-config.xml" />					
			   <!-- A Tester sans-->
	    	   <source-path path-element="${FLEX_HOME}/frameworks" />
	    	   <source-path path-element="${basedir}/${flex.temp.dir}" />
					 		 
			   <compiler.library-path dir="${FLEX_HOME}/frameworks" append="true">
			  		<include name="libs" /> 
		       </compiler.library-path> 
		        
		       <!--<compiler.include-libraries dir="${flex.libs.dir}" append="true">
					<include name="*.swc"/>
			   </compiler.include-libraries>-->
			   
			   <!--Utilise pour les libs non compilable en rsl-->
			   <compiler.include-libraries dir="libs" append="true">
					<include name="*.swc"/>
			   </compiler.include-libraries>
	    		
 		       <compiler.verbose-stacktraces>true</compiler.verbose-stacktraces>
 		       <compiler.headless-server>true</compiler.headless-server>
				
			   <locale>en_US</locale>
			   <locale>fr_FR</locale>
			   <!--<source-path>${local.path}</source-path>-->
			   <source-path path-element="${basedir}/locale/{locale}" />
			   <include-resource-bundles>i18n</include-resource-bundles>
			   
			    <!-- Add RSLs compiled -->
			   
			    <runtime-shared-library-path path-element="${flex.libs.dir}/gencore_assets.swc">
					 <url rsl-url="gencore_assets.swc"/>
			    </runtime-shared-library-path>
				
				<runtime-shared-library-path path-element="${flex.libs.dir}/gencore_ui_commons.swc">
					 <url rsl-url="gencore_ui_commons.swc"/>
			    </runtime-shared-library-path>
				
				<runtime-shared-library-path path-element="${flex.libs.dir}/lucciMVC.swc">
					 <url rsl-url="lucciMVC.swc"/>
			    </runtime-shared-library-path>
				
				<runtime-shared-library-path path-element="${flex.libs.dir}/lucciValidator.swc">
					 <url rsl-url="lucciValidator.swc"/>
			    </runtime-shared-library-path>
				
				<runtime-shared-library-path path-element="${flex.libs.dir}/lucciCheckboxDatagrid.swc">
					 <url rsl-url="lucciCheckboxDatagrid.swc"/>
			    </runtime-shared-library-path>
				
				<!--La lib n'est pas compil� avec -create-digest=true , Essayer de trouver les sources et de la compiler moi-m�me-->
				<!--<runtime-shared-library-path path-element="${env.GENTOOLS_HOME}\flex_libs\map_1_18.swc">
					 <url rsl-url="/map_1_18.swc"/>
			    </runtime-shared-library-path>
				
				<runtime-shared-library-path path-element="${env.GENTOOLS_HOME}\flex_libs\map_flex_1_18.swc">
					 <url rsl-url="/map_flex_1_18.swc"/>
			    </runtime-shared-library-path>-->
				
				
			   
			

				
		   </mxmlc>
	  </target>

	
	<!-- ================================= 
	          target: compile_flex_library      
	 ================================= -->
	  <target name="compile_flex_library" description="--> compile flex library">
			<compc output="${bin.release.dir}/${ivy.module}.swc"
				   allow-source-path-overlap="true"
				   headless-server="true"
			       warn-no-constructor="false"
				   compute-digest="true">
								
				<!-- Config file. -->
				<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml" />
						
			    <!-- List of path elements that form the roots of ActionScript class hierarchies. -->
				<source-path path-element="${basedir}/${flex.temp.dir}" />
			    <source-path path-element="${basedir}/${flex.locale.dir}/en_US" />
			    <!--<source-path path-element="${FLEX_HOME}/frameworks" />-->
	    	    
				
				<include-sources dir="${basedir}/${flex.temp.dir}" includes="*"/>
				
				<!-- Resource bundles to include.-->
			 <!--  <locale>en_US</locale>
			   <source-path>locale/{locale}</source-path>
			   <include-resource-bundles>i18n</include-resource-bundles>-->
			   <include-resource-bundles bundle="${flex.locale.resourcebundle}"/>
				
				<!-- List of SWC files or directories that contain SWC files. -->
				<external-library-path dir="${FLEX_HOME}/frameworks/libs" append="true">
					<include name="*.swc" />
				</external-library-path>
				
				<!--<namespace uri="http://gencore.com/0.1" manifest="manifest.xml"/>
				
				<include-namespaces uri="http://gencore.com/0.1"/>-->
				
			</compc>
		</target>

	   <!-- ================================= 
		     target: create wrapper; this task is called only for a Flex web project          
	   ================================= -->
	    <target name="wrapper">
			
			<echo> create wrapper</echo>
				
				<html-wrapper title="${ivy.module}"
							  file="${ivy.module}.html"
							  height="100%"
							  width="100%"
							  bgcolor="#ffffff"
							  application="gencore_ui_portal"
							  swf="gencore_ui_portal"
							  version-major="10"
							  version-minor="0"
							  version-revision="0"
							  history="true"
					 		  express-install="true" 
						      version-detection="true" 
							  output="${bin.release.dir}" />
		</target>
		
		<target name="build_custom_wrapper" depends="wrapper">
			<echo>Building Custom Wrapper...</echo>
			<copy file="${env.GENTOOLS_HOME}/${template.file}.html" tofile="${bin.release.dir}/${ivy.module}.html" overwrite="true">
				<filterchain>
					<replacetokens>
						<token key="module" value="gencore_ui_portal"/>
						<token key="flashVersion" value="${flashVersion}"/>
						<token key="endpoint" value="${endpoint}"/>
						<token key="gmapskey" value="${gmapskey}"/>
						<token key="version" value="${project.version}"/>
						<token key="width" value="100%"/>
						<token key="height" value="100%"/>
						<token key="bgcolor" value="#FFFFFF"/>
						<token key="quality" value="high"/>
					</replacetokens>
				</filterchain>
			</copy>
			<echo>Built Custom Wrapper</echo>
        </target>
	
	
	
    <!-- ================================= 
          target: generate asdoc        
      ================================= -->
    <target name="asdoc" description="--> asdoc">   
      <asdoc output="${as.doc.dir}" window-title="${as.doc.title}" lenient="true" failonerror="false">
		   <doc-sources path-element="${basedir}/${flex.temp.dir}"/>
	       <compiler.include-libraries dir="${flex.libs.dir}" append="true">
				<include name="*.swc"/>
		   </compiler.include-libraries>
	   </asdoc>		
	</target>
	

	 
	 
	<!-- ======================================================== -->
		
	<!-- FlexUnit =============================================== -->
    <target name="compileTestRunner">
        <echo>Compiling Test Runner SWF To Test</echo>
        <mxmlc file="${flex.test.temp.dir}/${test.root.package}/FlexUnitApplication.mxml" 
               output="build/test/FlexUnitApplication.swf"
			   debug="false" 
			   static-rsls="false"
			   actionscript-file-encoding="UTF-8"
			   incremental="false"	  
			   keep-generated-actionscript="false">
			   
			   
			   <load-config filename="${FLEX_HOME}/frameworks/flex-config.xml" />					
			   <!-- A Tester sans-->
	    	   <source-path path-element="${FLEX_HOME}/frameworks" />
	    	   <source-path path-element="${basedir}/${flex.test.temp.dir}" />
			   <source-path path-element="${basedir}/${flex.temp.dir}" />
					 		 
			   <compiler.library-path dir="${FLEX_HOME}/frameworks" append="true">
			  		<include name="libs" /> 
		       </compiler.library-path> 
		        
		       <compiler.include-libraries dir="${basedir}/${flex.libs.dir}" append="true">
					<include name="*.swc"/>
			   </compiler.include-libraries>
			   
			   <compiler.include-libraries dir="${env.GENTOOLS_HOME}/${flex.test.libs.dir}" append="true">
					<include name="*.swc"/>
			   </compiler.include-libraries>
			   
			   <!--<compiler.include-libraries dir="C:/Program Files/Adobe/Adobe Flash Builder 4 Plug-in/eclipse/plugins/com.adobe.flexbuilder.flexunit_4.0.1.277662/flexunitframework/libs/" append="true">
					<include name="*.swc"/>
			   </compiler.include-libraries>-->
			    		
 		       <compiler.verbose-stacktraces>true</compiler.verbose-stacktraces>
 		       <compiler.headless-server>true</compiler.headless-server>
			   
			   <locale>en_US</locale>
			   <locale>fr_FR</locale>
			   <source-path>locale/{locale}</source-path>
			   <include-resource-bundles>i18n</include-resource-bundles>
				
			  <!-- <locale>en_US</locale>
			   <source-path>C:\Program Files\Adobe\Adobe Flash Builder 4 Plug-in\eclipse\plugins\com.adobe.flexbuilder.flexunit_4.0.1.277662\flexunitframework\locale\version4locale</source-path>
			  <include-resource-bundles>FlexUnitTestRunner_rb</include-resource-bundles>-->
			    
        </mxmlc>
        <echo>Compiled Test Runner SWF To Test</echo>
    </target>
	
    <target name="executeTestRunner" description="executes the test runner app">
		<echo>Running Test Runner SWF</echo>
		
		<flexunit toDir="${flex.test.report.dir}"
				  haltonfailure="false"
				  verbose="true"
				  swf="build/test/FlexUnitApplication.swf"
				  failureproperty="flexunit.failed"
				  localTrusted="false"
				  headless="true"
				  display="100">
		
		  <!--  <testSource dir="build/bin-temp/flex_test_temp/com/gencore/ui/test/">
		      <include name="LoginTestCase.as" />
		   </testSource>-->
		   <library dir="${basedir}/${flex.libs.dir}" />
		   <library dir="${basedir}/${flex.test.libs.dir}" />
		   
		</flexunit>
		<echo>Run Test Runner SWF</echo>
		
		<echo>Generate Readable Tests</echo>
        <junitreport todir="${flex.test.report.dir}">
            <fileset dir="${flex.test.report.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${flex.test.report.dir}/html"/>
        </junitreport>
        <echo>Generated Readable Tests</echo>
	
	</target>
	
</project> 
